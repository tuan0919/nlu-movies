{"version":3,"sources":["PaginationDot.tsx"],"names":["PaginationDot","PureComponent","constructor","props","state","animColor","Animated","Value","animOpacity","animTransform","componentDidMount","active","_animate","componentDidUpdate","prevProps","toValue","animatedDuration","animatedFriction","animatedTension","commonProperties","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","Easing","linear","duration","spring","friction","tension","push","parallel","start","color","inactiveColor","render","activeOpacity","carouselRef","containerStyle","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","delayPressInDot","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","styles","sliderPaginationDotContainer","dotStyle","sliderPaginationDot","onPress","currentRef","current","_snapToItem","_getPositionIndex","error","console","warn","undefined"],"mappings":"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","sourcesContent":["import React, { PureComponent, RefObject } from 'react';\r\nimport {\r\n    Animated,\r\n    Easing,\r\n    TouchableOpacity,\r\n    StyleProp,\r\n    ViewStyle\r\n} from 'react-native';\r\nimport styles from './Pagination.style';\r\nimport type Carousel from 'src/carousel/Carousel';\r\n\r\ntype PaginationDotProps<TData> = {\r\n  inactiveOpacity: number;\r\n  inactiveScale: number;\r\n  active?: boolean;\r\n  activeOpacity?: number;\r\n  animatedDuration?: number;\r\n  animatedFriction?: number;\r\n  animatedTension?: number;\r\n  carouselRef?: Carousel<TData> | RefObject<Carousel<TData>> | null;\r\n  color?: string;\r\n  containerStyle?: StyleProp<ViewStyle>;\r\n  delayPressInDot?: number;\r\n  inactiveColor?: string;\r\n  inactiveStyle?: StyleProp<ViewStyle>;\r\n  index?: number;\r\n  style?: StyleProp<ViewStyle>;\r\n  tappable?: boolean;\r\n};\r\n\r\ntype PaginationDotState = {\r\n  animColor: Animated.Value;\r\n  animOpacity: Animated.Value;\r\n  animTransform: Animated.Value;\r\n};\r\n\r\nexport default class PaginationDot<TData> extends PureComponent<\r\n  PaginationDotProps<TData>,\r\n  PaginationDotState\r\n> {\r\n    constructor (props: PaginationDotProps<TData>) {\r\n        super(props);\r\n        this.state = {\r\n            animColor: new Animated.Value(0),\r\n            animOpacity: new Animated.Value(0),\r\n            animTransform: new Animated.Value(0)\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.active) {\r\n            this._animate(1);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate (prevProps: PaginationDotProps<TData>) {\r\n        if (prevProps.active !== this.props.active) {\r\n            this._animate(this.props.active ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    _animate (toValue = 0) {\r\n        const { animColor, animOpacity, animTransform } = this.state;\r\n        const { animatedDuration, animatedFriction, animatedTension } = this.props;\r\n\r\n        const commonProperties = {\r\n            toValue,\r\n            isInteraction: false,\r\n            useNativeDriver: !this._shouldAnimateColor\r\n        };\r\n\r\n        const animations = [\r\n            Animated.timing(animOpacity, {\r\n                easing: Easing.linear,\r\n                duration: animatedDuration,\r\n                ...commonProperties\r\n            }),\r\n            Animated.spring(animTransform, {\r\n                friction: animatedFriction,\r\n                tension: animatedTension,\r\n                ...commonProperties\r\n            })\r\n        ];\r\n\r\n        if (this._shouldAnimateColor) {\r\n            animations.push(\r\n                Animated.timing(animColor, {\r\n                    easing: Easing.linear,\r\n                    ...commonProperties\r\n                })\r\n            );\r\n        }\r\n\r\n        Animated.parallel(animations).start();\r\n    }\r\n\r\n    get _shouldAnimateColor () {\r\n        const { color, inactiveColor } = this.props;\r\n        return color && inactiveColor;\r\n    }\r\n\r\n    render () {\r\n        const { animColor, animOpacity, animTransform } = this.state;\r\n        const {\r\n            active,\r\n            activeOpacity,\r\n            carouselRef,\r\n            color,\r\n            containerStyle,\r\n            inactiveColor,\r\n            inactiveStyle,\r\n            inactiveOpacity,\r\n            inactiveScale,\r\n            index,\r\n            style,\r\n            tappable,\r\n            delayPressInDot\r\n        } = this.props;\r\n\r\n        const animatedStyle = {\r\n            opacity: animOpacity.interpolate({\r\n                inputRange: [0, 1],\r\n                outputRange: [inactiveOpacity, 1]\r\n            }),\r\n            transform: [\r\n                {\r\n                    scale: animTransform.interpolate({\r\n                        inputRange: [0, 1],\r\n                        outputRange: [inactiveScale, 1]\r\n                    })\r\n                }\r\n            ]\r\n        };\r\n        const animatedColor =\r\n      this._shouldAnimateColor && inactiveColor && color ?\r\n          {\r\n              backgroundColor: animColor.interpolate({\r\n                  inputRange: [0, 1],\r\n                  outputRange: [inactiveColor, color]\r\n              })\r\n          } :\r\n          {};\r\n\r\n        const dotContainerStyle = [\r\n            styles.sliderPaginationDotContainer,\r\n            containerStyle || {}\r\n        ];\r\n\r\n        const dotStyle = [\r\n            styles.sliderPaginationDot,\r\n            style || {},\r\n            (!active && inactiveStyle) || {},\r\n            animatedStyle,\r\n            animatedColor\r\n        ];\r\n\r\n        const onPress =\r\n      tappable && (!!index || index === 0) ?\r\n          () => {\r\n              try {\r\n                  const currentRef =\r\n                carouselRef && 'current' in carouselRef ?\r\n                    carouselRef.current :\r\n                    carouselRef;\r\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n              currentRef!._snapToItem(currentRef!._getPositionIndex(index));\r\n              } catch (error) {\r\n                  console.warn(\r\n                      'react-native-snap-carousel | Pagination: ' +\r\n                  '`carouselRef` has to be a Carousel ref.\\n' +\r\n                  error\r\n                  );\r\n              }\r\n          } :\r\n          undefined;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n              accessible={false}\r\n              style={dotContainerStyle}\r\n              activeOpacity={tappable ? activeOpacity : 1}\r\n              onPress={onPress}\r\n              delayPressIn={delayPressInDot}\r\n            >\r\n                <Animated.View style={dotStyle} />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n"]}