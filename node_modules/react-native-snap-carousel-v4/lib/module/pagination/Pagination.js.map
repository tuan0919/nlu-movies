{"version":3,"sources":["Pagination.tsx"],"names":["React","PureComponent","I18nManager","Platform","View","PaginationDot","styles","IS_IOS","OS","IS_RTL","isRTL","Pagination","constructor","props","dotColor","inactiveDotColor","console","warn","dotElement","inactiveDotElement","tappableDots","carouselRef","undefined","_needsRTLAdaptations","vertical","_activeDotIndex","activeDotIndex","dotsLength","dots","activeOpacity","dotContainerStyle","dotStyle","inactiveDotOpacity","inactiveDotScale","inactiveDotStyle","renderDots","animatedDuration","animatedFriction","animatedTension","delayPressInDot","DefaultDot","Array","keys","map","i","isActive","cloneElement","key","active","index","render","containerStyle","accessibilityLabel","style","sliderPagination","flexDirection"],"mappings":"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","sourcesContent":["import React, { PureComponent, ReactElement } from 'react';\r\nimport {\r\n    I18nManager,\r\n    Platform,\r\n    View,\r\n    StyleProp,\r\n    ViewStyle\r\n} from 'react-native';\r\nimport PaginationDot from './PaginationDot';\r\nimport styles from './Pagination.style';\r\nimport type Carousel from 'src/carousel/Carousel';\r\n\r\nconst IS_IOS = Platform.OS === 'ios';\r\nconst IS_RTL = I18nManager.isRTL;\r\n\r\ntype PaginationProps<TData> = {\r\n  activeDotIndex: number;\r\n  dotsLength: number;\r\n  activeOpacity?: number;\r\n  carouselRef?: Carousel<TData> | null;\r\n  containerStyle?: StyleProp<ViewStyle>;\r\n  dotColor?: string;\r\n  dotContainerStyle?: StyleProp<ViewStyle>;\r\n  dotElement?: ReactElement;\r\n  dotStyle?: StyleProp<ViewStyle>;\r\n  inactiveDotColor?: string;\r\n  inactiveDotElement?: ReactElement;\r\n  inactiveDotOpacity: number;\r\n  inactiveDotScale: number;\r\n  inactiveDotStyle?: StyleProp<ViewStyle>;\r\n  renderDots?: (\r\n    activeIndex: number,\r\n    length: number,\r\n    context: Pagination<TData>\r\n  ) => ReactElement;\r\n  tappableDots: boolean;\r\n  vertical: boolean;\r\n  accessibilityLabel?: string;\r\n  animatedDuration: number;\r\n  animatedFriction: number;\r\n  animatedTension: number;\r\n  delayPressInDot: number;\r\n};\r\n\r\nexport default class Pagination<TData> extends PureComponent<PaginationProps<TData>> {\r\n  static defaultProps = {\r\n      inactiveDotOpacity: 0.5,\r\n      inactiveDotScale: 0.5,\r\n      tappableDots: false,\r\n      vertical: false,\r\n      animatedDuration: 250,\r\n      animatedFriction: 4,\r\n      animatedTension: 50,\r\n      delayPressInDot: 0\r\n  };\r\n\r\n  constructor (props: PaginationProps<TData>) {\r\n      super(props);\r\n\r\n      // Warnings\r\n      if (\r\n          (props.dotColor && !props.inactiveDotColor) ||\r\n      (!props.dotColor && props.inactiveDotColor)\r\n      ) {\r\n          console.warn(\r\n              'react-native-snap-carousel | Pagination: ' +\r\n          'You need to specify both `dotColor` and `inactiveDotColor`'\r\n          );\r\n      }\r\n      if (\r\n          (props.dotElement && !props.inactiveDotElement) ||\r\n      (!props.dotElement && props.inactiveDotElement)\r\n      ) {\r\n          console.warn(\r\n              'react-native-snap-carousel | Pagination: ' +\r\n          'You need to specify both `dotElement` and `inactiveDotElement`'\r\n          );\r\n      }\r\n      if (props.tappableDots && props.carouselRef === undefined) {\r\n          console.warn(\r\n              'react-native-snap-carousel | Pagination: ' +\r\n          'You must specify prop `carouselRef` when setting `tappableDots` to `true`'\r\n          );\r\n      }\r\n  }\r\n\r\n  _needsRTLAdaptations () {\r\n      const { vertical } = this.props;\r\n      return IS_RTL && !IS_IOS && !vertical;\r\n  }\r\n\r\n  get _activeDotIndex () {\r\n      const { activeDotIndex, dotsLength } = this.props;\r\n      return this._needsRTLAdaptations() ?\r\n          dotsLength - activeDotIndex - 1 :\r\n          activeDotIndex;\r\n  }\r\n\r\n  get dots () {\r\n      const {\r\n          activeOpacity,\r\n          carouselRef,\r\n          dotsLength,\r\n          dotColor,\r\n          dotContainerStyle,\r\n          dotElement,\r\n          dotStyle,\r\n          inactiveDotColor,\r\n          inactiveDotElement,\r\n          inactiveDotOpacity,\r\n          inactiveDotScale,\r\n          inactiveDotStyle,\r\n          renderDots,\r\n          tappableDots,\r\n          animatedDuration,\r\n          animatedFriction,\r\n          animatedTension,\r\n          delayPressInDot\r\n      } = this.props;\r\n\r\n      if (renderDots) {\r\n          return renderDots(this._activeDotIndex, dotsLength, this);\r\n      }\r\n\r\n      const DefaultDot = (\r\n          <PaginationDot\r\n            carouselRef={carouselRef}\r\n            tappable={tappableDots && typeof carouselRef !== 'undefined'}\r\n            activeOpacity={activeOpacity}\r\n            color={dotColor}\r\n            containerStyle={dotContainerStyle}\r\n            style={dotStyle}\r\n            inactiveColor={inactiveDotColor}\r\n            inactiveOpacity={inactiveDotOpacity}\r\n            inactiveScale={inactiveDotScale}\r\n            inactiveStyle={inactiveDotStyle}\r\n            animatedDuration={animatedDuration}\r\n            animatedFriction={animatedFriction}\r\n            animatedTension={animatedTension}\r\n            delayPressInDot={delayPressInDot}\r\n          />\r\n      );\r\n\r\n      const dots = [...Array(dotsLength).keys()].map((i) => {\r\n          const isActive = i === this._activeDotIndex;\r\n          return React.cloneElement(\r\n              (isActive ? dotElement : inactiveDotElement) || DefaultDot,\r\n              {\r\n                  key: `pagination-dot-${i}`,\r\n                  active: isActive,\r\n                  index: i\r\n              }\r\n          );\r\n      });\r\n\r\n      return dots;\r\n  }\r\n\r\n  render () {\r\n      const {\r\n          dotsLength,\r\n          containerStyle,\r\n          vertical,\r\n          accessibilityLabel\r\n      } = this.props;\r\n\r\n      if (!dotsLength || dotsLength < 2) {\r\n          return false;\r\n      }\r\n\r\n      const style = [\r\n          styles.sliderPagination,\r\n          {\r\n              flexDirection: vertical ?\r\n                  ('column' as const) :\r\n                  this._needsRTLAdaptations() ?\r\n                      ('row-reverse' as const) :\r\n                      ('row' as const)\r\n          },\r\n          containerStyle || {}\r\n      ];\r\n\r\n      return (\r\n          <View\r\n            pointerEvents='box-none'\r\n            style={style}\r\n            accessible={!!accessibilityLabel}\r\n            accessibilityLabel={accessibilityLabel}\r\n          >\r\n              {this.dots}\r\n          </View>\r\n      );\r\n  }\r\n}\r\n"]}